//
//  lib.tools.ts
//
// Generated by Poll Castillo on 15/02/2023.
//
export const inputObserver = (): void => {
  const inputs = <NodeListOf<Element>>document.querySelectorAll('input')
  inputs.forEach((input: any) => {
    input.addEventListener("keyup", (e: any): void => {
      if (input.value == "" || input.value == " ")
        input.classList.remove('input_filled'),
          input.value = " "
      else
        input.classList.add('input_filled')
    })
  })
}

export class FixStatusElement {
  public fix(element: any): void {
    const elementTextValue = element.innerText
    if (elementTextValue === "Enabled")
      elementTextValue.innerText = 'Activo',
        elementTextValue.toUpperCase()
    else
      elementTextValue.toUpperCase()
  }
}

export class FixStatusInputElement {
  public fix(inputId: string): void {
    const inputs = <NodeListOf<Element>>document.querySelectorAll(`#${inputId}`)
    inputs.forEach((input: any): void => {
      if (input.value === 'Enabled')
        input.value = 'Activo'.toUpperCase()
      else if (input.value == 'Disabled')
        input.value = 'Inactivo'.toUpperCase()
    })
  }
}

export const drawTagsIntoTables = (): void => {
  const tags: HTMLElement | any = document.querySelectorAll('.tag span')
  tags.forEach((tag: any): void => {
    let text = tag.innerText
    if (text === "Enabled" ||
      text === "enabled" ||
      text === "ENABLED" ||
      text === "Activo" ||
      text === "ACTIVO") {
      tag.innerText = "Activo"
      tag.classList.add("tag_green")
    }
    else if (text === "Disabled" ||
      text === "disabled" ||
      text === "DISABLED" ||
      text === "Inactivo" ||
      text === "INACTIVO") {
      tag.innerText = "Inactivo"
      tag.classList.add("tag_gray")
    }
  })

}